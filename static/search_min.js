async function lazyLoad(){await init("/tinysearch_engine_bg.wasm")}var loaded=!1;function autocomplete(e){var t;function n(e){if(!e)return!1;!function(e){for(var t=0;t<e.length;t++)e[t].classList.remove("autocomplete-active")}(e),t>=e.length&&(t=0),t<0&&(t=e.length-1),e[t].classList.add("autocomplete-active")}function a(t){for(var n=document.getElementsByClassName("autocomplete-items"),a=0;a<n.length;a++)t!=n[a]&&t!=e&&n[a].parentNode.removeChild(n[a])}e.addEventListener("click",function(e){loaded||(lazyLoad(),loaded=!0)}),e.addEventListener("input",function(e){var n,o,i,c=this.value;if(a(),!c)return!1;t=-1,(n=document.createElement("DIV")).setAttribute("id",this.id+"autocomplete-list"),n.setAttribute("class","autocomplete-items"),this.parentNode.appendChild(n);let r=search(c,3);for(i=0;i<r.length;i++){let e=r[i];(o=document.createElement("DIV")).innerHTML=e[0],o.addEventListener("click",function(t){window.location.href=`${e[1]}?q=${encodeURIComponent(c)}`}),n.appendChild(o)}}),e.addEventListener("keydown",function(e){var a=document.getElementById(this.id+"autocomplete-list");a&&(a=a.getElementsByTagName("div")),40==e.keyCode?(t++,n(a)):38==e.keyCode?(t--,n(a)):13==e.keyCode&&(e.preventDefault(),t>-1&&a&&a[t].click())}),document.addEventListener("click",function(e){a(e.target)})}autocomplete(document.getElementById("tinysearch"));const __exports={};let wasm,passStringToWasm,WASM_VECTOR_LEN=0,cachedTextEncoder=new TextEncoder("utf-8"),cachegetUint8Memory=null;function getUint8Memory(){return null!==cachegetUint8Memory&&cachegetUint8Memory.buffer===wasm.memory.buffer||(cachegetUint8Memory=new Uint8Array(wasm.memory.buffer)),cachegetUint8Memory}passStringToWasm="function"==typeof cachedTextEncoder.encodeInto?function(e){let t=e.length,n=wasm.__wbindgen_malloc(t),a=0;{const t=getUint8Memory();for(;a<e.length;a++){const o=e.charCodeAt(a);if(o>127)break;t[n+a]=o}}if(a!==e.length){e=e.slice(a),n=wasm.__wbindgen_realloc(n,t,t=a+3*e.length);const o=getUint8Memory().subarray(n+a,n+t);a+=cachedTextEncoder.encodeInto(e,o).written}return WASM_VECTOR_LEN=a,n}:function(e){let t=e.length,n=wasm.__wbindgen_malloc(t),a=0;{const t=getUint8Memory();for(;a<e.length;a++){const o=e.charCodeAt(a);if(o>127)break;t[n+a]=o}}if(a!==e.length){const o=cachedTextEncoder.encode(e.slice(a));n=wasm.__wbindgen_realloc(n,t,t=a+o.length),getUint8Memory().set(o,n+a),a+=o.length}return WASM_VECTOR_LEN=a,n};const heap=new Array(32);function getObject(e){return heap[e]}heap.fill(void 0),heap.push(void 0,null,!0,!1);let heap_next=heap.length;function dropObject(e){e<36||(heap[e]=heap_next,heap_next=e)}function takeObject(e){const t=getObject(e);return dropObject(e),t}export function search(e,t){const n=passStringToWasm(e),a=WASM_VECTOR_LEN;return takeObject(wasm.search(n,a,t))}__exports.search=search;let cachedTextDecoder=new TextDecoder("utf-8");function getStringFromWasm(e,t){return cachedTextDecoder.decode(getUint8Memory().subarray(e,e+t))}function addHeapObject(e){heap_next===heap.length&&heap.push(heap.length+1);const t=heap_next;return heap_next=heap[t],heap[t]=e,t}function __wbindgen_json_parse(e,t){return addHeapObject(JSON.parse(getStringFromWasm(e,t)))}function init(e){let t;const n={"./tinysearch_engine":__exports};if(e instanceof URL||"string"==typeof e||e instanceof Request){const a=fetch(e);t="function"==typeof WebAssembly.instantiateStreaming?WebAssembly.instantiateStreaming(a,n).catch(e=>(console.warn("`WebAssembly.instantiateStreaming` failed. Assuming this is because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",e),a.then(e=>e.arrayBuffer()).then(e=>WebAssembly.instantiate(e,n)))):a.then(e=>e.arrayBuffer()).then(e=>WebAssembly.instantiate(e,n))}else t=WebAssembly.instantiate(e,n).then(t=>t instanceof WebAssembly.Instance?{instance:t,module:e}:t);return t.then(({instance:e,module:t})=>(wasm=e.exports,init.__wbindgen_wasm_module=t,wasm))}__exports.__wbindgen_json_parse=__wbindgen_json_parse;export default init;